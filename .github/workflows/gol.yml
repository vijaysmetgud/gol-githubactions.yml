name: Maven Build and Publish

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "*/1 * * * *"  # Polls SCM every minute
  workflow_dispatch:  # Allow manual triggering of workflow with input
    inputs:
      GOAL:
        description: 'Choose the Maven Goal'
        required: true
        default: 'install'
        type: choice
        options:
          - 'package'
          - 'clean package'
          - 'validate'
          - 'install'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          java-package: jdk

      - name: Run Maven Build
        run: mvn ${{ github.event.inputs.GOAL }}  # Use the GOAL input from workflow_dispatch

      - name: Archive WAR artifacts
        uses: actions/upload-artifact@v3
        with:
          name: gameoflife.war
          path: '**/target/gameoflife.war'

      - name: Publish JUnit test results
        uses: actions/upload-artifact@v3
        with:
          name: junit-test-results
          path: '**/surefire-reports/TEST-*.xml'

  notify:
    runs-on: ubuntu-latest
    needs: build
    if: always()  # Trigger this step regardless of the build outcome

    steps:
      - name: Send success/failure email notification
        uses: dawidd6/action-send-mail@v3
        with:
          from: 'vijay1399@gmail.com'   # Update with your email
          to: 'vijaymetgud9@gmail.com'      # Update with recipient email
          subject: "${{ job.status }}: Build Status - ${{ github.repository }}"
          body: |
            Hi, this GitHub Actions job has completed.
            Build Status: ${{ job.status }}
            Build URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          server_address: 'smtp.example.com'   # Update with your SMTP server address
          server_port: 587                     # Update with your SMTP server port
          username: ${{ secrets.SMTP_USERNAME }}  # Store your SMTP username in GitHub Secrets
          password: ${{ secrets.SMTP_PASSWORD }}  # Store your SMTP password in GitHub Secrets
          secure: true
